/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  UserAppAccess as PrismaUserAppAccess,
  AppModel as PrismaAppModel,
  User as PrismaUser,
} from "@prisma/client";

export class UserAppAccessServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserAppAccessCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userAppAccess.count(args);
  }

  async userAppAccesses(
    args: Prisma.UserAppAccessFindManyArgs
  ): Promise<PrismaUserAppAccess[]> {
    return this.prisma.userAppAccess.findMany(args);
  }
  async userAppAccess(
    args: Prisma.UserAppAccessFindUniqueArgs
  ): Promise<PrismaUserAppAccess | null> {
    return this.prisma.userAppAccess.findUnique(args);
  }
  async createUserAppAccess(
    args: Prisma.UserAppAccessCreateArgs
  ): Promise<PrismaUserAppAccess> {
    return this.prisma.userAppAccess.create(args);
  }
  async updateUserAppAccess(
    args: Prisma.UserAppAccessUpdateArgs
  ): Promise<PrismaUserAppAccess> {
    return this.prisma.userAppAccess.update(args);
  }
  async deleteUserAppAccess(
    args: Prisma.UserAppAccessDeleteArgs
  ): Promise<PrismaUserAppAccess> {
    return this.prisma.userAppAccess.delete(args);
  }

  async getAppField(parentId: string): Promise<PrismaAppModel | null> {
    return this.prisma.userAppAccess
      .findUnique({
        where: { id: parentId },
      })
      .appField();
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.userAppAccess
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
